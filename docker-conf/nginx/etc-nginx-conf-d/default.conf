server {

    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    # For https
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server ipv6only=on;
    # ssl_certificate /etc/nginx/ssl/default.crt;
    # ssl_certificate_key /etc/nginx/ssl/default.key;

    server_name localhost;
    root /var/www/public;
    index index.php index.html index.htm;

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }
}

# server {

#     # Redirect all traffic for port 80
#     # to SSL (443)
#     listen 80 default_server;
#     server_name _;
#     return 301 https://$host$request_uri;

# }

# server {

#     # For https
#     listen [::]:443 ssl default_server;
#     listen 443 ssl default_server;

#     # Optimize SSL by caching session parameters for 10 minutes. This cuts down on the number of expensive SSL handshakes.
#     # The handshake is the most CPU-intensive operation, and by default it is re-negotiated on every new/parallel connection.
#     # By enabling a cache (of type "shared between all Nginx workers"), we tell the client to re-use the already negotiated state.
#     # Further optimization can be achieved by raising keepalive_timeout, but that shouldn't be done unless you serve primarily HTTPS.
#     ssl_session_cache    shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
#     ssl_session_timeout  24h;

#     # Use a higher keepalive timeout to reduce the need for repeated handshakes
#     keepalive_timeout 300; # up from 75 secs default

#     # remember the certificate for a year and automatically connect to HTTPS
#     add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';

#     ssl_certificate      /etc/nginx/ssl/default.crt;
#     ssl_certificate_key  /etc/nginx/ssl/default.key;
   
#     server_name localhost;
#     root /var/www/public;
#     index index.php index.html index.htm;

#     location / {
#          try_files $uri $uri/ /index.php$is_args$args;
#     }

#     location ~ \.php$ {
#         try_files $uri /index.php =404;
#         fastcgi_pass 127.0.0.1:9000;
#         fastcgi_index index.php;
#         fastcgi_buffers 16 16k;
#         fastcgi_buffer_size 32k;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         #fixes timeouts
#         fastcgi_read_timeout 600;
#         include fastcgi_params;
#     }

#     location ~ /\.ht {
#         deny all;
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/letsencrypt/;
#         log_not_found off;
#     }
# }